#!QUESTMAKER_START_SCRIPT Auto  Collect #5
#The player needs some amount of local currency brought to him/her. 
#A reward is given upon completion of the task.
#
#!QUESTMAKER_PAGE Quest Name/Duration
#Enter the unique name and starting time/duration for your new quest.
#Times are entered as a simple number or math expression to denote a
#time in default ticks (4 second period), or you may follow the expression 
#with the word seconds, minutes, hours, days, mudhours, muddays, mudweeks,
#mudmonths, or mudyears.  Time expressions may include numbers, math 
#symbols, or the ? operator to generate random numbers.  Example:
#"5 + 3?10 minutes" would generate a frequency of 8-15 minutes.#
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=auto_collect_5
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Auto  Collect #5
#
#Quest Frequency:
#This is the time between quest starts.
#$FREQUENCY=$TIMEEXPRESSION=90 minutes
#
#Quest Duration:
#This is how long your quest remains running, and how long a player 
#accepting the quest has to complete the quest and report back in.
#$DURATION=$TIMEEXPRESSION=90 minutes
#
#!QUESTMAKER_PAGE Specify the Quest Criteria and Instructions
#The criteria for players and instructions they need.
#
#Quest-Player Criterium:
#A Zapper Mask to describe what kinds of players will receive this quest.  
#You can use this to set race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#Instructions: 
#Specify some the instructions and justification for the quest.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=You need to find some money.  It is somewhere around somewhere.
#
#Success:
#This is what the player sees when the player completes the quest.
#$QUEST_WINSPEECH_TEXT=($LONG_STRING)=That's all I needed. Congratulations $i!
#
#!QUESTMAKER_PAGE Specify the Amount and Type of money
#The money to collect..
#
#Amount of money: 
#The total amount of money required to complete the quest.
#$NUM_COLLECTABLES=($EXPRESSION)=100
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for bringing back the items.
#
#Reward items: 
#Specify zero or more items to choose from as a reward 
#$REWARD_ITEMS=$ITEMXML_ZEROORMORE
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times,
#or 'prev' to require a previous quest, if multiple found.
#$MULTIPLE=$CHOOSE=YES,NO,PREV
#
#$CATEGORY=($HIDDEN)=
#
#!QUESTMAKER_END_SCRIPT Auto  Collect #5

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR
set questtype auto_collect5
set category $CATEGORY
set instructions $QUEST_INSTRUCTIONSSTRING

set wait $FREQUENCY
set interval 1
quiet

set room
set area
set pcmobgroup reselect any mask=$QUEST_CRITERIA
give script LOAD=$QUEST_ID_playertrack.script

set duration $DURATION

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_rewarditems.xml</NAME><DATA><ITEMS>$REWARD_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>

FUNCTION_PROG CHECK_DONE
	if var($n $QUEST_ID_COLLECTED >= $NUM_COLLECTABLES) and QUESTSCRIPTED($i *)
		if EVAL('$EXP' != '')
			mpexp $i $EXP
		endif
		if EVAL('$FACTION' != '')
			mpfaction $i $FACTION +$NUMFACTION
		endif
		if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
			mpforce $i mpoload QuestPoint
			mpechoat $i You receive a quest point.
		endif
		if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
			mpforce $i mpoload $GOLD
			mpechoat $i You receive $b.
		endif
		mpforce $i mpoload fromfile $QUEST_ID_rewarditems.xml any
		if EVAL('$b' != '')
			mpechoat $i You receive $b.
		endif
		mpquestwin $i *
		mpecho $QUEST_WINSPEECH_TEXT
		mpendquest $i
		mpqset * STATISTICS SUCCESS
		IF EVAL('$MULTIPLE' == 'PREV')
			mptransfer $i $i
		ENDIF
	else
		mpechoat "$i" That's $<$i $QUEST_ID_COLLECTED>/$NUM_COLLECTABLES.
		mpsetvar $i PROGRESS Collected: $<$i $QUEST_ID_COLLECTED>/$NUM_COLLECTABLES
	endif
~

EXECMSG_PROG GET ALL
	if EVAL($n == $i)
		if ISLIKE($o '-JAVACLASS +Coins +GenCoins +StdCoins') and EVAL('$%GSTAT($o CURRENCY)%' == '$%GSTAT($i CURRENCY)%')
			if EVAL('$<$i $QUEST_ID_COLLECTED>' < $NUM_COLLECTABLES)
				MPSETVAR $i $QUEST_ID_COLLECTED +$%GOLDAMT($o)%
				MPCALLFUNC CHECK_DONE
			endif	
		else
			if ISLIKE($p '-JAVACLASS +Coins +GenCoins +StdCoins') and EVAL('$%GSTAT($p CURRENCY)%' == '$%GSTAT($i CURRENCY)%')
				if EVAL('$<$i $QUEST_ID_COLLECTED>' < $NUM_COLLECTABLES)
					MPSETVAR $i $QUEST_ID_COLLECTED +$%GOLDAMT($p)%
					MPCALLFUNC CHECK_DONE
				endif	
			endif
		endif
	endif
~

FUNCTION_PROG CAN_ACCEPT
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and ( EVAL('$MULTIPLE' != 'PREV') or QUESTWINNER($n previous) )
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !QUESTSCRIPTED($n *)
				RETURN TRUE
			endif
		endif
	endif
	RETURN CANCEL
~

FUNCTION_PROG DO_ACCEPT
	mpqset * STATISTICS ACCEPTED
	mpscript $n INDIVIDUAL SAVABLE STATIC=LOAD=$QUEST_ID_playertrack.script
~

ONCE_PROG 100
	mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
	if var($i $QUEST_ID_COLLECTED = '')
		mpsetvar $i $QUEST_ID_COLLECTED 0
	endif
	IF QVAR(* DURATION != '0')
	    if QVAR(* REMAINING == '')
	        MPENDQUEST $i
	        RETURN
	    else
			mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
		endif
	ENDIF
	mpsetvar $i PROGRESS Collected: $<$i $QUEST_ID_COLLECTED>/$NUM_COLLECTABLES
	mpat $i mpechoat $i $QUEST_INSTRUCTIONSSTRING
~

RAND_PROG 25
	IF QVAR(* DURATION != '0')
		if QVAR(* REMAINING == '')
			MPENDQUEST $i
		else
			mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
		endif
	ENDIF
~

QUEST_TIME_PROG * -1
	MPECHOAT $i The quest "$QUEST_NAME" has ended.
~

QUEST_TIME_PROG * 1
	MPECHOAT $i The quest "$QUEST_NAME" has 1 minute remaining.
~
</DATA></FILE>